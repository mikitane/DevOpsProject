image: docker/compose:latest

# services:
#   - docker:dind
before_script:
  - ls -l
  - ls -l ./
  - ls -l /
  - pwd
# before_script:
#   - curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#   - chmod +x /usr/local/bin/docker-compose
#   - ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

build:
  stage: build
  script:
    - ls -l
    - pwd
    # Ensure that there is no container from previous test runs
    - docker-compose -f docker-compose.test.yml down -v
    - docker build ./tests -t test_service:latest
    - docker-compose -f docker-compose.test.yml up --build --force-recreate -d

test:
  stage: test
  script:
    - docker run --network="testing_network" test_service:latest python healthcheck.py
    - docker run --network="testing_network" test_service:latest python test_apigateway.py
    # Ensure that there is no container from previous test runs
    - docker-compose -f docker-compose.test.yml down -v

deploy:
  stage: deploy
  script:
    - export DEPLOY_ENV=prod
    - sh deploy.sh

